{"version":3,"sources":["services/person.js","components/personform.js","components/filter.js","components/persons.js","components/notification.js","app.js","index.js"],"names":["baseURL","axios","get","then","response","data","newPerson","post","id","delete","put","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumChange","type","Filter","filter","handleFilterChange","Persons","persons","setPersons","map","person","key","name","number","onClick","begonePerson","window","confirm","personService","handleDeleteClick","Notification","message","className","App","useState","setNewName","setNewNumber","setFilter","setMessage","useEffect","personsToShow","toLowerCase","includes","event","target","preventDefault","some","user","samePerson","find","changedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd0603a4.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = \"/api/persons\"\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseURL, newPerson)\n    return request.then(response => response.data)\n}\n\nconst begone = id => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = newPerson => {\n    const request = axios.put(`${baseURL}/${newPerson.id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, begone, update }\n\n\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                name: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>\n                number: <input value={props.newNumber} onChange={props.handleNumChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form> \n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with <input value={props.filter} onChange={props.handleFilterChange} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\nimport personService from '../services/person'\n\nconst Persons = ({ persons, setPersons }) => {\n\n    const handleDeleteClick = (begonePerson) => {\n        const { id, name } = begonePerson\n        if (window.confirm(`Delete ${name}?`)) {\n            personService\n                .begone(id)\n                .then(data => {\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        }\n    }\n\n    const rows = () => persons.map(person => \n        <li key={person.id}>\n            {person.name} {person.number} \n            <button onClick={() => handleDeleteClick(person)}>\n                delete\n            </button>\n        </li>    \n    )   \n\n    return (\n        <ul>\n            {rows()}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notify\"> \n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/person'\nimport PersonForm from './components/personform'\nimport Filter from './components/filter'\nimport Persons from './components/persons'\nimport Notification from './components/notification'\n\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ message, setMessage ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(data => {\n                setPersons(data)\n            })\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    \n    const handleNumChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const sameName = (user) => user.name === newName\n        if (persons.some(sameName)) {\n            const makeChange = window.confirm(newName + \" is already added to phonebook, replace the old number with the new one?\")\n            if (makeChange) {\n                const samePerson = persons.find(person => person.name === newName)\n                const changedPerson = { ...samePerson, number: newNumber }\n                personService\n                    .update(changedPerson)\n                    .then(data => {\n                        setMessage(\n                            `${newName} has been successfully updated.`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                        setPersons(persons.map(person => person.id !== data.id ? person : data))\n                    })\n                    .catch(error => {\n                        setPersons(\n                            persons.filter(person => person.id !== changedPerson.id)\n                        )\n                        setMessage(\n                            `${newName} has been removed from the database.`\n                        )\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            const person = {\n                name: newName,\n                number: newNumber\n            }\n            \n            personService\n                .create(person)\n                .then(data => {\n                    setMessage(\n                        `Added ${newName}.`\n                    )\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                    setPersons(persons.concat(data))\n                    setNewName('')\n                    setNewNumber('')\n                })\n        }\n    }\n\n    const personsToShow = persons.filter(person => \n        person.name.toLowerCase().includes(filter.toLowerCase())\n    )\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Filter \n                filter={filter} \n                handleFilterChange={handleFilterChange} \n            />\n            <h2>Add New Person</h2>\n            <PersonForm \n                addPerson={addPerson}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumChange={handleNumChange}\n            />\n            <h2>Numbers</h2>\n            <Persons \n                persons={personsToShow} \n                setPersons={setPersons}\n            />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport './styles/main.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}